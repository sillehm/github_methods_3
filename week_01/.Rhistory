residual_sd
residual_sd
m_text <- c("model i", "model ii", "model iii", "model miv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
residual_sd <- as_tibble(rbind(m_text,sigmas))
residual_sd
AIC(mi, mii, miii, miv)
m_text <- c("model i", "model ii", "model iii", "model miv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(iv))
m_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
residual_sd <- as_tibble(rbind(m_text,sigmas))
residual_sd
AIC(mi, mii, miii, miv)
View(new_df)
new_df <- politeness %>%
na.omit() %>%
group_by(subject, gender) %>%
summarise(avg_f0mn=(mean(f0mn)))
mii2 <- lm(avg_f0mn ~ gender, new_df)
plot(mii2, 2)
plot(mii2, 2)
plot(mii, 2)
plot(mii2, 2)
plot(mi, 2)
qqnorm(politeness$f0mn, pch=1, frame=F)
qqline(politeness$f0mn, col="steelblue", lwd=2)
qqnorm(new_df$avg_f0mn, pch=1, frame=F)
qqline(new_df$avg_f0mn, col="green3", lwd=2)
qqnorm(politeness$f0mn, pch=1, frame=F)
qqline(politeness$f0mn, col="steelblue", lwd=2)
qqnorm(new_df$avg_f0mn, pch=1, frame=F)
qqline(new_df$avg_f0mn, col="green5", lwd=2)
qqnorm(politeness$f0mn, pch=1, frame=F)
qqline(politeness$f0mn, col="steelblue", lwd=2)
qqnorm(new_df$avg_f0mn, pch=1, frame=F)
qqline(new_df$avg_f0mn, col="marroon", lwd=2)
qqnorm(politeness$f0mn, pch=1, frame=F)
qqline(politeness$f0mn, col="steelblue", lwd=2)
qqnorm(new_df$avg_f0mn, pch=1, frame=F)
qqline(new_df$avg_f0mn, col="red4", lwd=2)
plot(mii2)
qqnorm(politeness$f0mn, pch=1, frame=F)
qqline(politeness$f0mn, col="steelblue", lwd=2)
qqnorm(new_df$avg_f0mn, pch=1, frame=F)
qqline(new_df$avg_f0mn, col="red4", lwd=2)
plot(miv, 2)
qqnorm(resid(miv))
qqline(resid(miv))
qqnorm(resid(mi))
qqline(resid(mi))
qqnorm(resid(mii2))
qqline(resid(mii2))
ggplot(politeness, aes(scenario, f0mn, colour=attitude))+
geom_point()+
facet_wrap(~ subject)+
theme_bw()+
ylab("Frequency in Hz")+
xlab("Scenario")+
geom_line(aes(y=miv, lty=gender), size=0.8)
ranef_df <- ranef(miv)
View(new_df)
View(ranef_df)
ranef_df <- data.frame(ranef(miv))
View(ranef_df)
yhatM <- predict(miv)
politeness <- na.omit(politeness)
politeness <- na.omit(politeness)
politeness$predicted <- predict(miv)
politeness <- na.omit(politeness)
politeness$predicted <- predict(miv)
View(politeness)
politeness <- read.csv('politeness.csv') ## read in data
# Changing characters to factors.
politeness[sapply(politeness, is.character)] <- lapply(politeness[sapply(politeness, is.character)], as.factor)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lme4)
politeness <- read.csv('politeness.csv') ## read in data
# Changing characters to factors.
politeness[sapply(politeness, is.character)] <- lapply(politeness[sapply(politeness, is.character)], as.factor)
F1 <- politeness %>%
filter(subject == "F1")
# Model with scenario as integer
F1model1 <- lm(f0mn ~ scenario, F1)
# Changing scenario from numeric to factor.
F1$scenario <- as.factor(F1$scenario)
# Model with scenario as factor.
F1model2 <- lm(f0mn ~ scenario, F1)
print(model.matrix(F1model1))
print(model.matrix(F1model2))
ggplot(politeness, aes(scenario, f0mn, colour=attitude))+
geom_point()+
facet_wrap(~ subject)+
theme_bw()+
ylab("Frequency in Hz")+
xlab("Scenario")
mi <- lm(f0mn ~ gender, politeness)
summary(mi)
mii <- lmer(f0mn ~ gender + (1|scenario), politeness)
summary(mii)
miii <- lmer(f0mn ~ gender + (1|subject), politeness)
summary(miii)
miv <- lmer(f0mn ~ gender + (1|subject) + (1|scenario), politeness)
summary(miv)
m_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
residual_sd <- as_tibble(rbind(m_text,sigmas))
residual_sd
AIC(mi, mii, miii, miv)
new_df <- politeness %>%
na.omit() %>%
group_by(subject, gender) %>%
summarise(avg_f0mn=(mean(f0mn)))
mii2 <- lm(avg_f0mn ~ gender, new_df)
qqnorm(resid(mi))
qqline(resid(mi))
qqnorm(resid(mii2))
qqline(resid(mii2))
politeness$scenario <- as.factor(politeness$scenario)
politeness$scenario <- as.factor(politeness$scenario)
ggplot(politeness, aes(scenario, f0mn, colour=attitude))+
geom_point()+
facet_wrap(~ subject)+
theme_bw()+
ylab("Frequency in Hz")+
xlab("Scenario")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lme4)
politeness <- read.csv('politeness.csv') ## read in data
# Changing characters to factors.
politeness[sapply(politeness, is.character)] <- lapply(politeness[sapply(politeness, is.character)], as.factor)
F1 <- politeness %>%
filter(subject == "F1")
# Model with scenario as integer
F1model1 <- lm(f0mn ~ scenario, F1)
# Changing scenario from numeric to factor.
F1$scenario <- as.factor(F1$scenario)
# Model with scenario as factor.
F1model2 <- lm(f0mn ~ scenario, F1)
print(model.matrix(F1model1))
print(model.matrix(F1model2))
politeness$scenario <- as.factor(politeness$scenario)
ggplot(politeness, aes(scenario, f0mn, colour=attitude))+
geom_point()+
facet_wrap(~ subject)+
theme_bw()+
ylab("Frequency in Hz")+
xlab("Scenario")
mi <- lm(f0mn ~ gender, politeness)
summary(mi)
mii <- lmer(f0mn ~ gender + (1|scenario), politeness)
summary(mii)
miii <- lmer(f0mn ~ gender + (1|subject), politeness)
summary(miii)
miv <- lmer(f0mn ~ gender + (1|subject) + (1|scenario), politeness)
summary(miv)
new_df <- politeness %>%
na.omit() %>%
group_by(subject, gender) %>%
summarise(avg_f0mn=(mean(f0mn)))
mii2 <- lm(avg_f0mn ~ gender, new_df)
qqnorm(resid(mi))
qqline(resid(mi))
qqnorm(resid(mii2))
qqline(resid(mii2))
politeness <- politeness %>% na.omit(politeness)
politeness$yhat <- predict(miv)
ggplot(politeness, aes(x = scenario, y = f0mn))+
geom_point() +
geom_point(aes(x = scenario, y = yhat, color = 'green')) +
facet_wrap(~ subject)+
xlab('Scenario') +
ylab('Hz') +
theme_minimal()
politeness <- politeness %>% na.omit(politeness)
politeness$yhat <- predict(miv)
ggplot(politeness, aes(x = scenario, y = f0mn))+
geom_point() +
geom_point(x = scenario, y = yhat, color = 'green') +
facet_wrap(~ subject)+
xlab('Scenario') +
ylab('Hz') +
theme_minimal()+
geom_tile(":)")
View(politeness)
politeness <- politeness %>% na.omit(politeness)
politeness$yhat <- predict(miv)
ggplot(politeness, aes(x = scenario, y = f0mn))+
geom_point() +
geom_point(aes(x = scenario, y = yhat),color = 'green') +
facet_wrap(~ subject)+
xlab('Scenario') +
ylab('Hz') +
theme_minimal()
politeness <- politeness %>% na.omit(politeness)
politeness$yhat <- predict(miv)
ggplot(politeness, aes(x = scenario, y = f0mn))+
geom_point() +
geom_point(aes(x = scenario, y = yhat),color = 'green', shape = 2) +
facet_wrap(~ subject)+
xlab('Scenario') +
ylab('Hz') +
theme_minimal()
politeness <- politeness %>% na.omit(politeness)
politeness$yhat <- predict(miv)
ggplot(politeness, aes(x = scenario, y = f0mn))+
geom_point() +
geom_point(aes(x = scenario, y = yhat),color = 'green', fill = "green", shape = 2) +
facet_wrap(~ subject)+
xlab('Scenario') +
ylab('Hz') +
theme_minimal()
politeness <- politeness %>% na.omit(politeness)
politeness$yhat <- predict(miv)
ggplot(politeness, aes(x = scenario, y = f0mn))+
geom_point() +
geom_point(aes(x = scenario, y = yhat),color = 'green', shape = 3) +
facet_wrap(~ subject)+
xlab('Scenario') +
ylab('Hz') +
theme_minimal()
mi3 <- lmer(f0mn ~ gender + attitude + (1|subject) + (1|scenario), politeness)
mi3 <- lmer(f0mn ~ gender + attitude + (1|subject) + (1|scenario), politeness)
mii3 <- lmer(f0mn ~ gender * attitude + (1|subject) + (1|scenario), politeness)
mi3 <- lmer(f0mn ~ gender + attitude + (1|subject) + (1|scenario), politeness)
summary(mi3)
mii3 <- lmer(f0mn ~ gender * attitude + (1|subject) + (1|scenario), politeness)
summary(mii3)
m_text <- c("model miv", "model mi3", "model mii3")
sigmas3 <- c(sigma(miv),sigma(mi3),sigma(mii3))
residual_sd3 <- as_tibble(rbind(m_text,sigmas3))
residual_sd3
AIC(mi, mii, miii, miv)
miv$residual
var(resid(miv))
var(resid(mii3))
m_text <- c("model miv", "model mi3", "model mii3")
sigmas3 <- c(sigma(miv),sigma(mi3),sigma(mii3))
resvar <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
residual3 <- as_tibble(rbind(m_text,sigmas3))
residual3
AIC(miv, mi3, mii3)
m_text <- c("model miv", "model mi3", "model mii3")
sigmas3 <- c(sigma(miv),sigma(mi3),sigma(mii3))
resvar <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
residual3 <- as_tibble(rbind(m_text,sigmas3, resvar))
residual3
AIC(miv, mi3, mii3)
m_text <- c("model miv", "model mi3", "model mii3")
sigmas3 <- c(sigma(miv),sigma(mi3),sigma(mii3))
resvar <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
residual3 <- as_tibble(cbind(m_text,sigmas3, resvar))
residual3
AIC(miv, mi3, mii3)
m_text <- c("model miv", "model mi3", "model mii3")
sigmas3 <- c(sigma(miv),sigma(mi3),sigma(mii3))
resvar <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
residual3 <- as_tibble(cbind(m_text="model",sigmas3="residual standard deviation", resvar= "residual variance"))
residual3
AIC(miv, mi3, mii3)
m_text <- c("model miv", "model mi3", "model mii3")
sigmas <- c(sigma(miv),sigma(mi3),sigma(mii3))
residual_variance <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
AIC <- c(AIC(miv),AIC(mi3), AIC(mii3))
residual3 <- as_tibble(cbind(m_text,sigmas3, residual_variance, AIC))
residual3
m_text <- c("model miv", "model mi3", "model mii3")
sigmas <- c(sigma(miv),sigma(mi3),sigma(mii3))
residual_variance <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
AIC <- c(AIC(miv),AIC(mi3), AIC(mii3))
residual3 <- as_tibble(cbind(m_text,sigmas, residual_variance, AIC))
residual3
model <- c("model miv", "model mi3", "model mii3")
sigmas <- c(sigma(miv),sigma(mi3),sigma(mii3))
residual_variance <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
AIC <- c(AIC(miv),AIC(mi3), AIC(mii3))
residual3 <- as_tibble(cbind(model,sigmas, residual_variance, AIC))
residual3
model <- c("Model miv", "Model mi3", "Model mii3")
sigmas <- c(sigma(miv),sigma(mi3),sigma(mii3))
residual_variance <- c(var(resid(miv)), var(resid(mi3)), var(resid(mii3)))
AIC <- c(AIC(miv),AIC(mi3), AIC(mii3))
residual3 <- as_tibble(cbind(model,sigmas, residual_variance, AIC))
residual3
17.192-5.544
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lme4, effects)
qqnorm(resid(mi), main = "Normal Q-Q Plot for frequncy ~ gender")
qqline(resid(mi))
qqnorm(resid(mii2), main = "Normal Q-Q Plot for average frequncy ~ gender")
qqline(resid(mii2))
View(politeness)
qqnorm(resid(mi3))
qqline(resid(mi3))
qqnorm(resid(mi3))
qqline(resid(mi3))
coef <- mi3$coef
coef
m_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
AIC <- (AIC(mi), AIC(mii), AIC(miii), AIC(miv))
mtable <- as_tibble(rbind(m_text,sigmas))
mtable
m_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
AIC <- (AIC(mi), AIC(mii), AIC(miii), AIC(miv))
mtable <- as_tibble(rbind(m_text,sigmas))
mtable
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lme4, effects)
setwd('/Users/Sillemarkussen/Desktop/github_methods_3/week_02')
m_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
AIC <- (AIC(mi), AIC(mii), AIC(miii), AIC(miv))
m_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
AIC <- c(AIC(mi), AIC(mii), AIC(miii), AIC(miv))
mtable <- as_tibble(rbind(m_text,sigmas))
mtable
m_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
AIC <- c(AIC(mi), AIC(mii), AIC(miii), AIC(miv))
mtable <- as_tibble(cbind(m_text,sigmas))
mtable
model_text <- c("model i", "model ii", "model iii", "model iv")
sigmas <- c(sigma(mi),sigma(mii),sigma(miii), sigma(miv))
AIC <- c(AIC(mi), AIC(mii), AIC(miii), AIC(miv))
mtable <- as_tibble(cbind(model_text,sigmas,AIC))
mtable
plot(effects::allEffects(interaction_model))
plot(effects::allEffects(mii3))
plot(allEffects(mii3), multiline=TRUE, ci.style="bars")
plot(effects::allEffects(mii3))
plot(allEffects(mii3), multiline=TRUE, ci.style="bars")
setwd('/desktop')
knitr::opts_chunk$set(echo = TRUE)
setwd('/Users/Sillemarkussen/Desktop')
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(Saccades_files)){
new_dat <- read.table(lau_files[i], sep = "\t", header = TRUE, dec = ',' )
lau <- rbind(new_dat, Saccades)
} # Going through each of the files on the list, reading them and them adding them to the data frame
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read.table(lau_files[i], sep = "\t", header = TRUE, dec = ',' )
lau <- rbind(new_dat, Saccades)
} # Going through each of the files on the list, reading them and them adding them to the data frame
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read.table(lau_files[i], sep = "\t", header = TRUE, dec = ',' )
lau <- rbind(new_dat, lau)
} # Going through each of the files on the list, reading them and them adding them to the data frame
View(lau)
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read.table(lau_files[i], sep = "\t", header = TRUE, dec = '.' )
lau <- rbind(new_dat, lau)
} # Going through each of the files on the list, reading them and them adding them to the data frame
View(lau)
View(lau)
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read.table(lau_files[i], sep = ",", header = TRUE, dec = ',' )
lau <- rbind(new_dat, lau)
} # Going through each of the files on the list, reading them and them adding them to the data frame
View(lau)
pacman::p_load(tidyverse)
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
df <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read_csv(lau_files[i], header = TRUE)
df <- rbind(new_dat, lau)
} # Going through each of the files on the list, reading them and them adding them to the data frame
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
df <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read_csv(lau_files[i], header = TRUE)
df <- rbind(new_dat, df)
} # Going through each of the files on the list, reading them and them adding them to the data frame
lau$target.type[which(lau$target.type=='even')] <- 'e'
lau$target.type[which(lau$target.type=='odd')] <- 'o'
lau$correct <- ifelse((lau$target.type == lau$obj.resp), 1, 0)
View(lau)
# changing class of the nessecary variables.
lau$trial.type <- as.factor(lau$trial.type)
lau$target.contrast <- as.numeric(lau$target.contrast)
lau$cue <- as.factor(lau$cue)
lau$task <- as.factor(lau$task)
lau$target.type <- as.factor(lau$target.type)
lau$rt.obj <- as.factor(lau$rt.obj)
lau$rt.subj <- as.factor(lau$rt.subj)
lau$subject <- as.factor(lau$subject)
lau$correct <- as.factor(lau$correct)
# changing class of the nessecary variables.
lau$trial.type <- as.factor(lau$trial.type)
lau$target.contrast <- as.numeric(lau$target.contrast)
lau$cue <- as.factor(lau$cue)
lau$task <- as.factor(lau$task)
lau$target.type <- as.factor(lau$target.type)
lau$rt.obj <- as.factor(lau$rt.obj)
lau$rt.subj <- as.numeric(lau$rt.subj)
lau$subject <- as.numeric(lau$subject)
lau$correct <- as.factor(lau$correct)
# Making a data frame with the data from experiment 2
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read_csv(lau_files[i], header = TRUE)
lau <- rbind(new_dat, lau)
} # Going through each of the files on the list, reading them and them adding them to the data frame
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read_csv(lau_files[i], header = TRUE)
lau <- rbind(new_dat, lau)
} # Going through each of the files on th
lau_files <- list.files(path = "experiment_2",
pattern = ".csv",
full.names = T)
lau <- data.frame() # Creating empty data frame
for (i in 1:length(lau_files)){
new_dat <- read.csv(lau_files[i], header = TRUE)
lau <- rbind(new_dat, lau)
} #
lau$target.type[which(lau$target.type=='even')] <- 'e'
lau$target.type[which(lau$target.type=='odd')] <- 'o'
lau$correct <- ifelse((lau$target.type == lau$obj.resp), 1, 0)
# changing class of the nessecary variables.
lau$trial.type <- as.factor(lau$trial.type)
lau$target.contrast <- as.numeric(lau$target.contrast)
lau$cue <- as.factor(lau$cue)
lau$task <- as.factor(lau$task)
lau$target.type <- as.factor(lau$target.type)
lau$rt.obj <- as.factor(lau$rt.obj)
lau$rt.subj <- as.numeric(lau$rt.subj)
lau$obj.resp <- as.factor(lau$obj.resp)
lau$subject <- as.numeric(lau$subject)
lau$correct <- as.factor(lau$correct)
lau_star <- lau %>%
filter(trial.type=="staircase")
View(lau_star)
mStar <- glm(correct ~ target.contrast, lau_star, family = 'binomial')
lau_star$predicted <- predict(mStar)
ggplot(lau_star, aes(target.contrast, predicted))+
geom_point()+
facet_wrap( ~ subject)
lau_star$predicted <- mStar$fitted.values
ggplot(lau_star, aes(target.contrast, predicted))+
geom_point()+
facet_wrap( ~ subject)
knitr::opts_chunk$set(echo = TRUE)
setwd('/Users/Sillemarkussen/Desktop')
pacman::p_load(tidyverse, lme4)
facet_wrap( ~ subject)
ggplot(lau_star, aes(target.contrast, correct))+
geom_point()+
geom_smooth(method = "glm")+
facet_wrap( ~ subject)
ggplot(lau_star, aes(target.contrast, log(correct)))+
geom_point()+
geom_smooth(method = "glm")+
facet_wrap( ~ subject)
# Plotting
ggplot(lau_star, aes(target.contrast, predicted))+
geom_point()+
geom_smooth(method = "glm")+
facet_wrap( ~ subject)
# Plotting
ggplot(lau_star, aes(target.contrast, predicted))+
geom_point()+
geom_smooth(mStar)+
facet_wrap( ~ subject)
# Plotting
ggplot(lau_star, aes(target.contrast, predicted))+
geom_point()+
geom_smooth(lau_star$predicted)+
facet_wrap( ~ subject)
# Plotting
ggplot(lau_star, aes(target.contrast, predicted))+
geom_point()+
geom_smooth()+
facet_wrap( ~ subject)
